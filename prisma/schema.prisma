
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fullname String
  email String
  password String
  isAdmin Boolean @default(false)

  course_comments CourseComments[]
  lesson_comments LessonComments[]

  @@id([id])
  @@unique([email])
  @@map("users")
}

model Courses {
  id String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title String
  description String

  teachers Teachers[]
  lessons Lessons[]
  comments CourseComments[]

  @@id([id])
  @@map("courses")
}

model Teachers {
  id String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fullname String

  course_id String @db.Uuid
  course Courses @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction)


  @@id([id])
  @@map("teachers")
}

model Lessons {
  id String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title String

  course_id String @db.Uuid
  course Courses @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  comments LessonComments[]

  @@id([id])
  @@map("lessons")
}

model CourseComments {
  id String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  comment String

  course_id String @db.Uuid
  course Courses @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  user_id String @db.Uuid
  user Users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)


  @@id([id])
  @@map("course_comments")
}

model LessonComments {
  id String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  comment String
  created_at DateTime @default(now())

  lesson_id String @db.Uuid
  lesson Lessons @relation(fields: [lesson_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  user_id String @db.Uuid
  user Users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)


  @@id([id])
  @@map("lesson_comments")
}


